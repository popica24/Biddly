version: "3.9"
networks:
  dev:
    driver: bridge

services:
  nginx:
    build:
      context: ./Server
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dev
  frontend:
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - dev

  redis_image:
    image: "redis:latest"
    networks:
      - dev

  backend:
    build:
      context: ./API
      dockerfile: Dockerfile
    ports:
      - "7174:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - REDIS_CONNECTION=redis_image
    depends_on:
      - redis_image
    networks:
      - dev

  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_DB: Biddly
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - dev

secrets:
  db_password:
    file: secrets/db_password.txt

volumes:
  app_data:
